// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom Type Validation Should validate argument with primitive type on Custom Type 1`] = `
{
  "error": [
    {
      "message": "Must be a valid email address",
      "path": "email.checkEmail.email",
    },
  ],
}
`;

exports[`Custom Type Validation Should validate argument with primitive type on Custom Type 2`] = `
{
  "email": {
    "checkEmail": true,
  },
}
`;

exports[`Custom Validator Should able to access context from custom validator 1`] = `
{
  "error": [
    {
      "message": "Always error",
      "path": "checkEmail.email",
    },
  ],
}
`;

exports[`Custom Validator Should able to access context from custom validator 2`] = `
[
  [
    "mail",
    {
      "args": {
        "email": "mail",
      },
      "contextValue": undefined,
      "directiveArgs": {
        "method": "CUSTOM",
        "validator": "email",
      },
      "options": {
        "customValidators": {
          "email": [Function],
        },
        "directive": "validate",
        "plugins": {
          "CUSTOM": [Function],
          "EMAIL": [Function],
          "LENGTH": [Function],
        },
      },
      "parent": undefined,
      "path": "checkEmail.email",
    },
  ],
]
`;

exports[`Custom Validator Should able to create your own validator 1`] = `
{
  "error": [
    {
      "message": "Always error",
      "path": "checkEmail.email",
    },
  ],
}
`;

exports[`Custom Validator Should able to create your own validator 2`] = `
{
  "error": [
    {
      "message": "Always error",
      "path": "checkEmail.email",
    },
  ],
}
`;

exports[`Mutation Validation Should validate argument inside array of custom type property 1`] = `
{
  "error": [
    {
      "message": "Must be a valid email address",
      "path": "addUser.user.1.email",
    },
  ],
}
`;

exports[`Mutation Validation Should validate argument inside array of custom type property 2`] = `
{
  "addUser": true,
}
`;

exports[`Mutation Validation Should validate argument inside custom type property 1`] = `
{
  "error": [
    {
      "message": "Must be a valid email address",
      "path": "addUser.user.email",
    },
  ],
}
`;

exports[`Mutation Validation Should validate argument inside custom type property 2`] = `
{
  "addUser": true,
}
`;

exports[`Mutation Validation Should validate argument inside nested custom type property 1`] = `
{
  "error": [
    {
      "message": "Must be a valid email address",
      "path": "addUser.user.suppose.email",
    },
  ],
}
`;

exports[`Mutation Validation Should validate argument inside nested custom type property 2`] = `
{
  "addUser": true,
}
`;

exports[`Mutation Validation Should validate argument with primitive type properly 1`] = `
{
  "error": [
    {
      "message": "Must be a valid email address",
      "path": "checkEmail.email",
    },
  ],
}
`;

exports[`Mutation Validation Should validate argument with primitive type properly 2`] = `
{
  "checkEmail": true,
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validator Should validate ASCII string properly 1`] = `"Must only contain ASCII characters"`;

exports[`Validator Should validate Ethereum address properly 1`] = `"Must be a valid Ethereum address"`;

exports[`Validator Should validate IP address properly 1`] = `"Must be a valid 4 IP address"`;

exports[`Validator Should validate IP range properly 1`] = `"Must be a valid IP range"`;

exports[`Validator Should validate ISBN properly 1`] = `"Must be a valid ISBN 10"`;

exports[`Validator Should validate ISIN properly 1`] = `"Must be a valid ISIN (International Securities Identification Number)"`;

exports[`Validator Should validate ISO 3166-1 alpha-2 code properly 1`] = `"Must be a valid ISO 3166-1 alpha-2 country code"`;

exports[`Validator Should validate ISO 3166-1 alpha-3 code properly 1`] = `"Must be a valid ISO 3166-1 alpha-3 country code"`;

exports[`Validator Should validate ISO8601 date properly 1`] = `"Must be a valid ISO8601 date string"`;

exports[`Validator Should validate ISRC properly 1`] = `"Must be a valid International Standard Recording Code (ISRC)"`;

exports[`Validator Should validate ISSN properly 1`] = `"Must be a valid International Standard Serial Number (ISSN)"`;

exports[`Validator Should validate JSON properly 1`] = `"Must be a valid JSON string"`;

exports[`Validator Should validate JWT properly 1`] = `"Must be a valid JSON Web Token (JWT)"`;

exports[`Validator Should validate MAC address properly 1`] = `"Must be a valid MAC address"`;

exports[`Validator Should validate MIME type properly 1`] = `"Must be a valid MIME type"`;

exports[`Validator Should validate MongoDB ObjectId properly 1`] = `"Must be a valid MongoDB ObjectId"`;

exports[`Validator Should validate URL properly 1`] = `"Must be a valid URL"`;

exports[`Validator Should validate UUID properly 1`] = `"Must be a valid UUID"`;

exports[`Validator Should validate alphabetic string properly 1`] = `"Must only contain letters"`;

exports[`Validator Should validate alphanumeric string properly 1`] = `"Must only contain letters and numbers"`;

exports[`Validator Should validate base64 string properly 1`] = `"Must be a valid base64 encoded string"`;

exports[`Validator Should validate boolean properly 1`] = `"Must be a boolean"`;

exports[`Validator Should validate credit card properly 1`] = `"Must be a valid credit card number"`;

exports[`Validator Should validate currency properly 1`] = `"Must be a valid currency amount"`;

exports[`Validator Should validate data URI properly 1`] = `"Must be a valid data URI"`;

exports[`Validator Should validate date before properly 1`] = `"Must be a date before 1/1/2023"`;

exports[`Validator Should validate date properly 1`] = `"Must be a date after 1/1/2003"`;

exports[`Validator Should validate decimal properly 1`] = `"Must be a decimal number"`;

exports[`Validator Should validate divisible properly 1`] = `"Must be a number that's divisible by 3"`;

exports[`Validator Should validate domain name properly 1`] = `"Must be a valid fully qualified domain name"`;

exports[`Validator Should validate email properly 1`] = `"Must be a valid email address"`;

exports[`Validator Should validate empty properly 1`] = `"Must not be empty"`;

exports[`Validator Should validate float properly 1`] = `"Must be a float number"`;

exports[`Validator Should validate full-width string properly 1`] = `"Must contain full-width characters"`;

exports[`Validator Should validate half-width string properly 1`] = `"Must contain half-width characters"`;

exports[`Validator Should validate hexadecimal color code properly 1`] = `"Must be a valid hex color code"`;

exports[`Validator Should validate hexadecimal properly 1`] = `"Must be a valid hexadecimal number"`;

exports[`Validator Should validate latitude and longitude properly 1`] = `"Must be a valid latitude coordinate"`;

exports[`Validator Should validate length properly 1`] = `"Must have a length within the specified range"`;

exports[`Validator Should validate lowercase properly 1`] = `"Must be all lowercase"`;

exports[`Validator Should validate multibyte characters properly 1`] = `"Must contain one or more multibyte characters"`;

exports[`Validator Should validate numeric characters properly 1`] = `"Must be a number"`;

exports[`Validator Should validate port number properly 1`] = `"Must be a valid port number"`;

exports[`Validator Should validate postal code properly 1`] = `"Must be a valid postal code"`;

exports[`Validator should validate surrogate pairs 1`] = `"Must contain any surrogate pairs characters"`;

exports[`Validator should validate uppercase characters 1`] = `"Must only contain uppercase characters"`;

exports[`Validator should validate uppercase characters 2`] = `"Must only contain uppercase characters"`;

exports[`Validator should validate variable width characters 1`] = `"Must contain a mixture of full and half-width characters"`;

exports[`Validator should validate variable width characters 2`] = `"Must contain a mixture of full and half-width characters"`;

exports[`Validator should validate whitelisted characters 1`] = `"Must only contain characters from the whitelist: abcdefghijklmnopqrstuvwxyz"`;

exports[`Validator should validate whitelisted characters 2`] = `"Must only contain characters from the whitelist: abcdefghijklmnopqrstuvwxyz"`;

exports[`Validator should validate whitelisted characters 3`] = `"Must only contain characters from the whitelist: abcdefghijklmnopqrstuvwxyz"`;
